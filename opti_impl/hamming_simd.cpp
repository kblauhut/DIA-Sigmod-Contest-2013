#include <arm_neon.h>
#include <cstdint>
static const uint8_t LUT[17][16] = {
    {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
     0xFF, 0xFF, 0xFF, 0xFF},
    {0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
     0xFF, 0xFF, 0xFF, 0xFF},
    {0x7F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
     0xFF, 0xFF, 0xFF, 0xFF},
    {0x7F, 0x7F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
     0xFF, 0xFF, 0xFF, 0xFF},
    {0x7F, 0x7F, 0x7F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
     0xFF, 0xFF, 0xFF, 0xFF},
    {0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
     0xFF, 0xFF, 0xFF, 0xFF},
    {0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
     0xFF, 0xFF, 0xFF, 0xFF},
    {0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
     0xFF, 0xFF, 0xFF, 0xFF},
    {0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF,
     0xFF, 0xFF, 0xFF, 0xFF},
    {0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0xFF, 0xFF, 0xFF,
     0xFF, 0xFF, 0xFF, 0xFF},
    {0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0xFF, 0xFF,
     0xFF, 0xFF, 0xFF, 0xFF},
    {0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0xFF,
     0xFF, 0xFF, 0xFF, 0xFF},
    {0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F,
     0xFF, 0xFF, 0xFF, 0xFF},
    {0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F,
     0x7F, 0xFF, 0xFF, 0xFF},
    {0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F,
     0x7F, 0x7F, 0xFF, 0xFF},
    {0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F,
     0x7F, 0x7F, 0x7F, 0xFF},
    {0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F,
     0x7F, 0x7F, 0x7F, 0x7F},
};

int hamming_simd(const char *q_wrd, const char *d_wrd, int len) {
  const uint8_t *q_ptr = (const uint8_t *)q_wrd;
  const uint8_t *d_ptr = (const uint8_t *)d_wrd;
  int dist = 0;

  while (len >= 16) {

    uint8x16_t mask = vld1q_u8(LUT[16]);
    uint8x16_t q = vld1q_u8(q_ptr);
    uint8x16_t d = vld1q_u8(d_ptr);

    uint8x16_t cmp = vceqq_u8(q, d);
    uint8x16_t not_cmp_mask_or = vmvnq_u8(vorrq_u8(cmp, mask));

    uint8x16_t popcount_result = vcntq_u8(not_cmp_mask_or);
    dist += vaddvq_u8(popcount_result);

    q_ptr += 16;
    d_ptr += 16;
    len -= 16;
  }

  if (len > 0) {
    uint8x16_t mask = vld1q_u8(LUT[len]);
    uint8x16_t q = vld1q_u8(q_ptr);
    uint8x16_t d = vld1q_u8(d_ptr);

    uint8x16_t cmp = vceqq_u8(q, d);
    uint8x16_t not_cmp_mask_or = vmvnq_u8(vorrq_u8(cmp, mask));

    uint8x16_t popcount_result = vcntq_u8(not_cmp_mask_or);
    dist += vaddvq_u8(popcount_result);
  }

  return dist;
}
